{"version":3,"sources":["components/Header.jsx","components/button.jsx","components/InputBoxes.jsx","components/CreateUserForm.tsx","components/AddUser.jsx","components/ShowUser.jsx","components/ShowList.jsx","components/hooks/useLocalStorage.js","components/EditUser.jsx","components/AppRouter.jsx","index.js"],"names":["Header","className","style","color","to","activeClassName","exact","Button","props","ref","refer","type","name","InputBox","field","onInputChange","errMsg","value","htmlFor","fontSize","text","borderWidth","onChange","placeholder","readOnly","CreateUserForm","existingUser","handleFormSubmit","useState","Username","USRID","Phno","Mailid","user","SetNewUser","refBtn","useRef","submitState","setSubmitState","useReducer","state","action","length","Usrmsg","USRIDmsg","match","Phnomsg","Mailidmsg","errMessage","setErrMsg","handleInputChange","event","target","prevState","errMsgs","margin","backgroundColor","onSubmit","preventDefault","errorMsg","value1","value2","noerrors","every","item","noemptyFields","val","trim","handleErrors","current","filter","id","map","AddUser","history","users","setUsers","Fragment","localStorage","getItem","parseInt","toString","setItem","String","setTimeout","push","User","DeleteUser","arr","useHistory","properties","indexOf","onClick","ShowList","onDeleteUser","flexBasis","useLocalStorage","key","initialValue","localValue","JSON","parse","err","setValue","useEffect","stringify","EditUser","useParams","userTobeUpdated","find","UpdatedUser","reaminingUser","AppRouter","render","path","App","ReactDOM","document","querySelector"],"mappings":"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","file":"static/js/main.602ed47e.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport './Header.css'\r\n\r\nconst Header = () => {\r\n    return (  \r\n        <div className=\"ui segment\" >\r\n        <h1 style={{color:\"orange\"}}>React CRUD Operations App</h1>\r\n        <header>\r\n            <div>\r\n                <NavLink to=\"/Create\" className=\"navlink\" activeClassName=\"active-link\" >Create</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to=\"/\" exact className=\"navlink\" activeClassName=\"active-link\">ShowUsers</NavLink>\r\n            </div>\r\n            \r\n        </header>\r\n      </div>\r\n    );\r\n}\r\n \r\nexport default Header;","import React from \"react\";\r\nconst Button = (props) => {\r\n  return <button ref={props.refer} className=\"ui primary button\" type={props.type}>{props.name}</button>;\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nconst InputBox = (props) => {\r\n    const {field,onInputChange,errMsg,value}=props\r\n    return ( \r\n        <div className=\"field\">\r\n                <label htmlFor={field.name} style={{fontSize:\"1rem\"}}>{field.text}</label>\r\n                  <input style={{borderWidth:\"2px\"}} name={field.name}  value={value[`${field.name}`]} type={field.type} onChange={onInputChange} placeholder={field.placeholder} readOnly={false}/>\r\n                \r\n            {(errMsg && errMsg!==\" \")&& <div className=\"ui pointing field red basic label\">{errMsg}</div>}\r\n        </div>\r\n        \r\n     );\r\n}\r\n \r\nexport default InputBox;","\r\nimport React,{useState,useReducer,useRef , ChangeEvent} from \"react\";\r\nimport Button from \"./button\";\r\nimport InputBox from \"./InputBoxes\";\r\ninterface User{\r\n   Username:string;\r\n  USRID:string;\r\n Phno:string;\r\n  Mailid:string;\r\n }\r\n \r\ninterface Props{\r\n  existingUser:any;\r\n  handleFormSubmit:(user:User)=>void\r\n}\r\ninterface FieldErrormsg{\r\n  Usrmsg:String,USRIDmsg:String,Phnomsg:String,Mailidmsg:String\r\n }\r\nconst CreateUserForm = (props:Props) => {\r\n const {existingUser,handleFormSubmit}=props;\r\n  const [user,SetNewUser]=useState({\r\n\r\n    Username: existingUser?existingUser.Username:'',\r\n   USRID: existingUser?existingUser.USRID:'',\r\n    Phno: existingUser?existingUser.Phno:'',\r\n    Mailid: existingUser?existingUser.Mailid:''\r\n  })\r\n  \r\n  const fields:Array<{\r\n    id:number,\r\n       name:\"Username\"|\"USRID\"|\"Phno\"|\"Mailid\",\r\n       text:string,\r\n       type:\"text\"|\"tel\"|\"email\",\r\n       placeholder:string\r\n    }>=[\r\n    {id:0, name: \"Username\", text: \"Username\",type:\"text\",placeholder:\"Username\"},\r\n    {id:1,name: \"USRID\", text: \"Credo-ID\",type:\"text\",placeholder:\"Example:xoxo!456\" },\r\n    {id:2, name: \"Phno\", text: \"Phone Number\",type:\"tel\",placeholder:\"999999999\" },\r\n    {id:3,name: \"Mailid\", text: \"Email-ID\",type:\"email\",placeholder:\"exmaple@xoyo.com\"},\r\n  ];\r\n const refBtn=useRef<HTMLButtonElement>(null);\r\n const [submitState,setSubmitState]=useState('')\r\n \r\n const intialState:FieldErrormsg={\r\n  Usrmsg:\" \",\r\n  USRIDmsg:\" \",\r\n  Phnomsg:\" \",\r\n  Mailidmsg:\" \"\r\n }\r\n\r\n const reducer=(state:FieldErrormsg,action:{type:string}):FieldErrormsg=>{\r\n  switch(action.type){\r\n    case 'ChangeUsernameError':\r\n        if(user[\"Username\"].length<8) state={...state,Usrmsg:\"Username must have atleast 8 characters\"}; \r\n        else state={...state,Usrmsg:\" \"};\r\n        break;\r\n    \r\n      case 'ChangeUSRIDError':\r\n                            if(user[\"USRID\"].length===0)\r\n                              state={...state,USRIDmsg:\"User ID must have 8 characters atleast One Uppercase alphabet,One lowercase alphabet,numbers and special characters\"};\r\n                            else if(!(user[\"USRID\"].match(\"[A-Z]\")))\r\n                              state={...state,USRIDmsg:\"User ID must have  one Upper Case Alphabet\"};\r\n                            else if(!(user[\"USRID\"].match(\"[a-z]\")))\r\n                                state={...state,USRIDmsg:\"User ID must have  one Lower case Alphabet\"};  \r\n                            else if(!(user[\"USRID\"].match(\"(?=.*[0-9]){1,}\"))) \r\n                              state={...state,USRIDmsg:\"User ID must have atleast one number\"};\r\n                            else if(!(user[\"USRID\"].match(\"(?=.*[!|@|#|$|%|^|&|*|_]){1,}\")))\r\n                              state={...state,USRIDmsg:\"User ID must have one special characters from [!,@,#,$,&,*,_,^,%]\"};\r\n                            else if(user[\"USRID\"].length<8)\r\n                              state={...state,USRIDmsg:\"User ID must contain atleast 8 characters\"};\r\n                            else state={...state,USRIDmsg:\" \"}\r\n                              break;\r\n\r\n         case 'ChangePhnoError':\r\n              if(!user[\"Phno\"].match(\"[0-9]{10,}\")) state={...state,Phnomsg:\"Must have 10 characters within [0-9]\"};\r\n              else state={...state,Phnomsg:\" \"};\r\n              break;\r\n          case 'ChangeMailidError':\r\n            if (!user[\"Mailid\"].match(\"^[a-zA-Z0-9+._-]+@[a-zA-Z0-9.-]+$\"))\r\n              state={...state,Mailidmsg:\"Enter a valid mailid\"};\r\n            else\r\n              state={...state,Mailidmsg:\" \"};\r\n              break;\r\n          default:break;\r\n            \r\n }\r\n return state;\r\n}\r\n const [errMessage,setErrMsg]=useReducer(reducer,intialState)\r\n \r\n const {Username,USRID,Phno,Mailid}=user;\r\n//if error return true\r\n  const handleErrors=()=>{\r\n    const {Usrmsg,USRIDmsg,Mailidmsg,Phnomsg}=errMessage;\r\n    let value1=[Usrmsg,USRIDmsg,Mailidmsg,Phnomsg];\r\n    const{Username,USRID,Phno,Mailid}=user\r\n    let value2=[Username,USRID,Phno,Mailid];  \r\n    let noerrors=value1.every(item=>{\r\n      return (item===\" \")\r\n    });\r\n  \r\n   let noemptyFields= value2.every(item=>{\r\n     let val =`${item.trim()}`;\r\n      return (val!==\" \" && val.length!==0)\r\n    })\r\n    return (noerrors && noemptyFields);\r\n  }\r\n  const onhandleSubmit=(event:React.FormEvent<HTMLFormElement>)=>{\r\n            event.preventDefault();\r\n            //boolean\r\n            let errorFields=handleErrors();\r\n            let errorMsg=\" \";\r\n            if(errorFields){\r\n              if(refBtn.current!==null)\r\n                  refBtn.current.style.filter=\"opacity(30%)\";\r\n              const newuser:User={\r\n                Username,\r\n                USRID,\r\n                Phno,\r\n                Mailid\r\n              }\r\n              handleFormSubmit(newuser);\r\n              errorMsg=\"Successfully Created\"\r\n            }\r\n            else{\r\n              errorMsg=\"Nomore errors or empty fields should occur\";\r\n              if(refBtn.current!==null)\r\n                  refBtn.current.style.filter=\"opacity(30%)\";\r\n              \r\n              \r\n            }\r\n            setSubmitState(errorMsg);\r\n\r\n          }\r\n  const handleInputChange=(event:ChangeEvent<HTMLFormElement>)=>{\r\n\r\n    const{name,value}=event.target;\r\n    switch(name){\r\n      case 'Username':\r\n        SetNewUser((prevState)=>({\r\n          ...prevState,\r\n          [name]:value\r\n          \r\n        }))\r\n      break;\r\n      case 'USRID':\r\n        SetNewUser((prevState)=>({\r\n          ...prevState,\r\n          [name]:value\r\n          \r\n        }))\r\n        \r\n      break;\r\n      case 'Mailid':\r\n        SetNewUser((prevState)=>({\r\n          ...prevState,\r\n          [name]:value\r\n        }))\r\n\r\n      break;\r\n      case 'Phno':\r\n        SetNewUser((prevState)=>({\r\n          ...prevState,\r\n          [name]:value\r\n          \r\n        }))\r\n\r\n      break;\r\n      default:break;\r\n    }\r\n    setErrMsg({type:`Change${name}Error`});\r\n  }\r\n const errMsgs={Username:errMessage[\"Usrmsg\"],Mailid:errMessage.Mailidmsg,USRID:errMessage.USRIDmsg,Phno:errMessage.Phnomsg}\r\n\r\n const color=(submitState===\"Successfully Created\")?\"green\":\"red\";\r\n  return (\r\n    <div style={{margin:\"10px\"}}>\r\n      {submitState && <p className=\"ui segment\" style={{fontSize:\"8\",backgroundColor:`${color}`,color:\"white\"}}>{submitState}</p>}\r\n\r\n        <form className=\"ui fluid form\" onSubmit={onhandleSubmit}>\r\n        \r\n        {fields.map((field)=>{\r\n          \r\n          return(\r\n            <InputBox \r\n            key={field.id}\r\n            value={user}\r\n            field={field}\r\n            onInputChange={handleInputChange}\r\n            errMsg={errMsgs[field.name]}\r\n            \r\n            />\r\n          )\r\n        })}        \r\n        <Button name=\"Create\" refer={refBtn}type=\"submit\"/>\r\n       </form>\r\n    </div>\r\n    \r\n  );\r\n};\r\n\r\nexport default CreateUserForm;\r\n","import React from 'react';\r\nimport CreateUserForm from './CreateUserForm';\r\n\r\n\r\n const AddUser =({history ,users,setUsers})=>{\r\n\r\n    const onSubmitForm=(user)=>{\r\n       if(localStorage.getItem(\"userid\")){\r\n            let value = parseInt(localStorage.getItem(\"userid\"))\r\n            user[\"id\"]=value.toString();\r\n       }\r\n        else{\r\n            localStorage.setItem(\"userid\",0)\r\n            user[\"id\"]=String(0)\r\n        }\r\n         \r\n         setUsers([user,...users])\r\n         setTimeout(()=>{\r\n            history.push('/')\r\n         },1000)\r\n         localStorage.setItem(\"userid\",parseInt(localStorage.getItem(\"userid\"))+1)\r\n\r\n    }\r\n     return(\r\n         <React.Fragment>\r\n             <CreateUserForm existingUser={null} handleFormSubmit={onSubmitForm}/>\r\n         </React.Fragment>\r\n     )\r\n }\r\n export default AddUser;","import React from 'react';\r\nimport './Usercard.css';\r\nimport { useHistory } from 'react-router';\r\nconst User=(props)=>{\r\n    const {id,Username,USRID,Phno,Mailid,DeleteUser}=props\r\n    const arr=[Username,USRID,Mailid,Phno]\r\n    const history=useHistory();\r\n    const properties=[\"Username\",\"ID\",\"Mailid\",\"Phno\"]\r\n    return(\r\n        \r\n            <div className=\"card user-card\">\r\n                <div className=\"content user-content\">\r\n                    <div className=\"header\">\r\n                        <h3>USER DETAILS</h3>\r\n                    </div>\r\n                </div>\r\n                <div className=\"user-details\">\r\n                { arr.map(item=>{\r\n                    return (\r\n                    <li className=\"description\">{properties[arr.indexOf(item)] } : {item}</li>\r\n                    )\r\n                })\r\n               }\r\n                </div>\r\n                \r\n                <div className=\"extra content\">\r\n                    <div className=\"ui two buttons btn\">\r\n                        <button className=\"ui basic green button edit-btn\" onClick={()=>history.push(`/edit/${id}`)}>Edit</button>\r\n                        <button className=\"ui basic red button dlt-btn\" onClick={()=>{DeleteUser(id)}}>Delete User</button>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n        \r\n    ) \r\n}\r\nexport default User;","import React from 'react';\r\nimport User from './ShowUser';\r\nimport \"./ShowList.css\";\r\n\r\nconst ShowList = ({users,setUsers}) => {\r\n    const onDeleteUser=(id)=>{\r\n        setUsers(users.filter(user=>user.id!==id))\r\n    \r\n    }\r\n    return ( \r\n    <React.Fragment>\r\n         <div className=\"flex\">\r\n            <div style={{flexBasis:\"100%\"}}>\r\n                <h2 className=\"ui segment\">List of Records</h2> \r\n            </div>\r\n            <div className=\"user-cards-block\">\r\n                    {users.length!==0 ? users.map(user=>{\r\n                    return(<User key={users.indexOf(user)} {...user} DeleteUser={onDeleteUser}/>)\r\n                    }):<h2 style={{backgroundColor:\"red\",color:\"white\"}} className=\"ui segment\">No users to show!</h2>}\r\n            </div>\r\n            \r\n            </div>\r\n    </React.Fragment>\r\n   \r\n\r\n    );\r\n}\r\n \r\nexport default ShowList;","import { useEffect, useState } from \"react\";\r\nconst useLocalStorage = (key, initialValue) => {\r\n  const [value, setValue] = useState(() => {\r\n    try {\r\n      const localValue = localStorage.getItem(key);\r\n      return localValue ? JSON.parse(localValue) : initialValue;\r\n    } catch (err) {\r\n      return initialValue;\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  }, [key, value]);\r\n\r\n  return [value, setValue];\r\n};\r\nexport default useLocalStorage;\r\n","import React from 'react';\r\nimport CreateUserForm from './CreateUserForm';\r\nimport { useParams } from 'react-router';\r\nconst EditUser = ({history,users,setUsers}) => {\r\n    const {id}=useParams();\r\n    const userTobeUpdated=users.find((user)=>user.id===(id));\r\n    const onSubmitForm=(UpdatedUser)=>{\r\n        UpdatedUser[\"id\"]=id;\r\n        const reaminingUser=users.filter((item)=>item.id!==(id))\r\n        setUsers([UpdatedUser,...reaminingUser]);\r\n        history.push('/');\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <CreateUserForm existingUser={userTobeUpdated} handleFormSubmit={onSubmitForm}/>\r\n        </div>\r\n      );\r\n}\r\n \r\nexport default EditUser;","import React from 'react';\r\nimport {BrowserRouter,Route,Switch} from 'react-router-dom';\r\nimport Header from './Header';\r\nimport AddUser from './AddUser';\r\nimport ShowList from './ShowList';\r\nimport useLocalStorage from './hooks/useLocalStorage';\r\nimport EditUser from './EditUser';\r\n\r\nconst AppRouter = () => {\r\n  const [users,setUsers]=useLocalStorage('users',[])\r\n    return ( \r\n    <BrowserRouter>\r\n        <Header />\r\n        <Switch>\r\n            \r\n                <Route \r\n                render={(props)=>(\r\n                  <AddUser {...props} users={users} setUsers={setUsers}/>\r\n                  )}\r\n                  path=\"/create/\"\r\n                \r\n                />\r\n                <Route\r\n                 render={(props)=>(\r\n                   <ShowList {...props} users={users} setUsers={setUsers}/>\r\n                 )}\r\n                 path=\"/\"\r\n                 exact={true}\r\n                 \r\n                 />\r\n                 <Route\r\n                 render={(props)=>(\r\n                   <EditUser {...props} users={users} setUsers={setUsers}/>\r\n                 )}\r\n                 path=\"/edit/:id\"\r\n                \r\n                 />\r\n            \r\n        </Switch>\r\n      </BrowserRouter> \r\n      );\r\n}\r\n \r\nexport default AppRouter;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport AppRouter from \"./components/AppRouter\";\r\n\r\nconst App = () => {\r\n  return <AppRouter />;\r\n};\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}